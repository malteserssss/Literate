Backend - Flask (Python)

from flask import Flask, request, jsonify, send_from_directory
from werkzeug.utils import secure_filename
import os

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'

ALLOWED_EXTENSIONS = {'wav', 'mp3'}
MAX_CONTENT_LENGTH = 16 * 1024 * 1024  # 16MB file size limit

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400

    if file and allowed_file(file.filename):
        if file.content_length > MAX_CONTENT_LENGTH:
            return jsonify({'error': 'File size exceeds the limit'}), 400

        filename = secure_filename(file.filename)
        file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
        return jsonify({'message': 'File uploaded successfully'}), 200
    else:
        return jsonify({'error': 'Invalid file type'}), 400

@app.route('/download/<path:filename>', methods=['GET'])
def download_file(filename):
    directory = os.path.join(app.config['UPLOAD_FOLDER'])
    return send_from_directory(directory, filename, as_attachment=True)

if __name__ == '__main__':
    app.run(debug=False, host='0.0.0.0')

Frontend React 
For the frontend, create a React component (e.g., FileUploadDownload.js):

import React, { useState } from 'react';
import axios from 'axios';
import DownloadLink from 'react-download-link';

const FileUploadDownload = () => {
    const [file, setFile] = useState(null);
    const [fileName, setFileName] = useState('');

    const handleFileChange = (e) => {
        setFile(e.target.files[0]);
    };

    const handleFileUpload = async () => {
        if (!file) return;

        const formData = new FormData();
        formData.append('file', file);

        try {
            const response = await axios.post('http://localhost:5000/upload', formData); // Replace with your Flask server address
            console.log(response.data.message);
            setFileName(file.name); // Set the uploaded file name for download
        } catch (error) {
            console.error(error);
        }
    };

    return (
        <div>
            <input type="file" onChange={handleFileChange} />
            <button onClick={handleFileUpload}>Upload</button>
            {fileName && (
                <DownloadLink
                    label="Download"
                    filename={fileName} // Pass the uploaded file name for download
                    exportFile={`http://localhost:5000/download/${fileName}`} // Replace with your Flask server address
                />
            )}
        </div>
    );
};

export default FileUploadDownload;
